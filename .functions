# ------------------------------------------------------------------
# | Functions - 2.21.18                                           |
# ------------------------------------------------------------------


# setup a project

  # variables
  actions=(make_gemfile make_rakefile make_gitignore make_folders add_files init_repo)


  function build_ruby () {
    for i in "${actions[@]}"; do
       $i
    done
  }

   function progress () {
      INT=0.2
        for i in {1..3}; do
          echo -n "."
          sleep $INT
      done
   }

# make a Gemfile
  function make_gemfile () {

    touch Gemfile
    progress
    echo "creating Gemfile"
    echo -e "source 'https://rubygems.org'\n\ngem 'minitest'\ngem 'rake'\ngem 'simplecov', require: false, group: :test\n" >> Gemfile
    progress
    echo "adding gems"
    bundle install
  }

  function make_rakefile () {
    touch Rakefile
    progress
    echo "creating Rakefile"
    echo -e "require 'rake/testtask'\n\ntask :default => :test\n\nRake::TestTask.new do |t|\n  t.pattern = 'test/test_*.rb'\nend\n\ntask :start do\n ruby 'lib/start.rb'\nend" >> Rakefile
    progress
    echo "adding content to Rakefile"
 }

 function make_gitignore () {
    touch .gitignore
    progress
    echo "creating gitignore"
    echo -e "coverage" >> .gitignore
    progress
    echo "adding content to gitignore"
 }

  function make_folders () {
    mkdir test
    progress
    echo "creating test folder"
    mkdir lib
    progress
    echo "creating lib folder"
  }

  function add_files () {
    touch  README.md
    progress
    echo "creating README.md"
    touch test/test_helper.rb
    progress
    echo "creating test_helper.rb"
    echo -e "require 'simplecov'\nSimpleCov.start\n\nrequire 'minitest/autorun'\nrequire 'minitest/pride'" >> test/test_helper.rb
    progress
    echo "adding content to test_helper.rb"
    progress
    echo "creating start.rb"
    touch lib/start.rb
  }

  function init_repo () {
    git init
  }

  # end project setup

# adding repo to github

  function add_repo () {
    git commit -m "first commit"
    progress
    echo "sending commit"
    git remote add origin "$@"
    progress
    echo "add origin"
    git push -u origin master
    progress
    echo "pushed to origin"
  }


# make a directory and go into it
  function mkd () {
    mkdir -p "$@" && cd "$@"
  }

# returns how many lines are in a file
  function file_lines () {
    function find_number () {
      cat $@ | wc -l
    }
    echo Your file $@ has $( find_number $@ ) lines.
  }

# go to the directory and list out the contents
  function cl () {
    cd $@ && ls -la
  }

# `o` with no arguments opens the current directory, otherwise opens the given location
# from mathiasbynens
  function o() {
  	if [ $# -eq 0 ]; then
  		open .;
  	else
  		open "$@";
  	fi;
  }

# `a` with no arguments opens the current directory in Atom, otherwise opens the given locations
# from mathiasbynens
  function a() {
  	if [ $# -eq 0 ]; then
  		atom .;
  	else
  		atom "$@";
  	fi;
  }

# playing with functions in here
  function dont_worry () {
    echo 'be happy'
  }

# congratulate yourself with a happy dance
  function happydance {
    echo '
    ┏(-_-)┛ ┗(-_-﻿ )┓ ┗(-_-)┛ ┏(-_-)┓
    '
  }

# having a sad day, here's a cute owl
  function sadday {
    echo '
    (o,o)
   <  .  >
   --"-"---
  '
  }
